go.property("speed", 360)
local grid = 460
local platform_heights = { 100, 200, 330 }
local coins = 3

function init(self)
	msg.post("ground/controller#ground", "set_speed", { speed = self.speed })
	self.gridw = 0
	self.spawns = {}
	self.lives = {}
	for i = 1,3 do
		self.lives[i] = factory.create("#lives_factory", vmath.vector3(1205 - (i-1)*100, 650, 0)) 
	end
end

function update(self, dt)
	self.gridw = self.gridw + self.speed * dt

	if self.gridw >= grid then
		self.gridw = 0

		if math.random() > 0.2 then 
			local h = platform_heights[math.random(#platform_heights)]
			local f = "#platform_factory"
			local coins = coins
			if math.random() > 0.5 then
				f = "#platform_long_factory"
				coins = coins * 2
			end
			local p = factory.create(f, vmath.vector3(1600, h, 0), nil, {}, 0.6)
			msg.post(p, "set_speed", { speed = self.speed })
			msg.post(p, "create_coins", { coins = coins })
			table.insert(self.spawns, p)
		end
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("reset") then
		local last = #self.lives
		if last ~= 0 then
			local heart_url = msg.url(nil, self.lives[last], "sprite")
			msg.post(heart_url, "disable")
			table.remove(self.lives, last)
		else
			msg.post("main:/loader#loader", "game_over")
		end
		
		for i,p in ipairs(self.spawns) do
			go.delete(p)
		end
		
		msg.post("hero#hero", "reset")
		self.spawns = {}
		
	elseif message_id == hash("delete_spawn") then
		
		for i,p in ipairs(self.spawns) do
			if p == message.id then
				table.remove(self.spawns, i)
				go.delete(p)
			end
			
		end
	end
end
